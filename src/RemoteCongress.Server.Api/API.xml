<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RemoteCongress.Server.Api</name>
    </assembly>
    <members>
        <member name="T:RemoteCongress.Server.Api.Controllers.Base.BaseCreateController`1">
            <summary>
            Exposes an endpoint to persist <typeparamref name="TModel"/>s.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Base.BaseCreateController`1.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Base.BaseCreateController{`0}},RemoteCongress.Common.Repositories.IImmutableDataRepository{`0})" -->
        <member name="M:RemoteCongress.Server.Api.Controllers.Base.BaseCreateController`1.Post(RemoteCongress.Common.VerifiedData{`0},System.Threading.CancellationToken)">
            <summary>
            Persists a <typeparamref name="TModel"/>.
            </summary>
            <param name="model">
            The <typeparamref name="TModel"/> to persist.
            </param>
            <returns>
            The persisted, signed, and validiated <typeparamref name="TModel"/>.
            </returns>
        </member>
        <member name="M:RemoteCongress.Server.Api.Controllers.Base.BaseCreateController`1.Validate(RemoteCongress.Common.VerifiedData{`0},System.Threading.CancellationToken)">
            <summary>
            Ensures that a create model request is valid.
            </summary>
            <param name="model">
            A <typeparamref name="TModel"/> to persist.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to handle cancellation.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="model"/> is null.
            </exception>
            <exception cref="T:System.OperationCanceledException">
            Thrown if <paramref name="cancellationToken"/> is null.
            </exception>
        </member>
        <member name="T:RemoteCongress.Server.Api.Controllers.Base.BaseFetchCollectionController`1">
            <summary>
            Exposes an endpoint to fetch a <see cref="!:TModel"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Base.BaseFetchCollectionController`1.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Base.BaseFetchCollectionController{`0}},RemoteCongress.Common.Repositories.IImmutableDataRepository{`0})" -->
        <member name="M:RemoteCongress.Server.Api.Controllers.Base.BaseFetchCollectionController`1.Get(System.Collections.Generic.IList{RemoteCongress.Common.Repositories.Queries.IQuery},System.Threading.CancellationToken)">
            <summary>
            Fetches all <see cref="!:TModel"/>s.
            </summary>
            <returns>
            The persisted, signed, and validiated <see cref="!:TModel"/>s.
            </returns>
        </member>
        <member name="T:RemoteCongress.Server.Api.Controllers.Base.BaseFetchController`1">
            <summary>
            Exposes an endpoint to fetch a <typeparamref name="TModel"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Base.BaseFetchController`1.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Base.BaseFetchController{`0}},RemoteCongress.Common.Repositories.IImmutableDataRepository{`0})" -->
        <member name="M:RemoteCongress.Server.Api.Controllers.Base.BaseFetchController`1.Get(System.String,System.Threading.CancellationToken)">
            <summary>
            Fetches a <typeparamref name="TModel"/>.
            </summary>
            <param name="id">
            The <see cref="P:RemoteCongress.Common.IIdentifiable.Id"/> of the <typeparamref name="TModel"/> to fetch.
            </param>
            <returns>
            The persisted, signed, and validiated <typeparamref name="TModel"/>.
            </returns>
        </member>
        <member name="M:RemoteCongress.Server.Api.Controllers.Base.BaseFetchController`1.Validate(System.String,System.Threading.CancellationToken)">
            <summary>
            Ensures that a fetch model request is valid.
            </summary>
            <param name="id">
            An id of a <typeparamref name="TModel"/> to fetch.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> to handle cancellation.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="id"/> is null.
            </exception>
            <exception cref="T:System.OperationCanceledException">
            Thrown if <paramref name="cancellationToken"/> is null.
            </exception>
        </member>
        <member name="T:RemoteCongress.Server.Api.Controllers.Bills.CreateBillController">
            <summary>
            Exposes an endpoint to persist <see cref="T:RemoteCongress.Common.Bill"/>s.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Bills.CreateBillController.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Bills.CreateBillController},RemoteCongress.Common.Repositories.IImmutableDataRepository{RemoteCongress.Common.Bill})" -->
        <member name="T:RemoteCongress.Server.Api.Controllers.Bills.FetchBillController">
            <summary>
            Exposes an endpoint to fetch a <see cref="T:RemoteCongress.Common.Bill"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Bills.FetchBillController.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Bills.FetchBillController},RemoteCongress.Common.Repositories.IImmutableDataRepository{RemoteCongress.Common.Bill})" -->
        <member name="T:RemoteCongress.Server.Api.Controllers.Bills.FetchBillsController">
            <summary>
            Exposes an endpoint to fetch a collection of <see cref="T:RemoteCongress.Common.Bill"/>s.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Bills.FetchBillsController.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Bills.FetchBillsController},RemoteCongress.Common.Repositories.IImmutableDataRepository{RemoteCongress.Common.Bill})" -->
        <member name="T:RemoteCongress.Server.Api.Controllers.Members.CreateMemberController">
            <summary>
            Exposes an endpoint to persist <see cref="T:RemoteCongress.Common.Member"/>s.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Members.CreateMemberController.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Members.CreateMemberController},RemoteCongress.Common.Repositories.IImmutableDataRepository{RemoteCongress.Common.Member})" -->
        <member name="T:RemoteCongress.Server.Api.Controllers.Members.FetchMemberController">
            <summary>
            Exposes an endpoint to fetch a <see cref="T:RemoteCongress.Common.Member"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Members.FetchMemberController.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Members.FetchMemberController},RemoteCongress.Common.Repositories.IImmutableDataRepository{RemoteCongress.Common.Member})" -->
        <member name="T:RemoteCongress.Server.Api.Controllers.Members.FetchMembersController">
            <summary>
            Exposes an endpoint to fetch a collection of <see cref="T:RemoteCongress.Common.Member"/>s.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Members.FetchMembersController.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Members.FetchMembersController},RemoteCongress.Common.Repositories.IImmutableDataRepository{RemoteCongress.Common.Member})" -->
        <member name="T:RemoteCongress.Server.Api.Controllers.Votes.CreateVoteController">
            <summary>
            Exposes an endpoint to persist <see cref="T:RemoteCongress.Common.Vote"/>s.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Votes.CreateVoteController.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Votes.CreateVoteController},RemoteCongress.Common.Repositories.IImmutableDataRepository{RemoteCongress.Common.Vote})" -->
        <member name="T:RemoteCongress.Server.Api.Controllers.Votes.FetchVoteController">
            <summary>
            Exposes an endpoint to fetch a <see cref="T:RemoteCongress.Common.Vote"/>.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Votes.FetchVoteController.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Votes.FetchVoteController},RemoteCongress.Common.Repositories.IImmutableDataRepository{RemoteCongress.Common.Vote})" -->
        <member name="T:RemoteCongress.Server.Api.Controllers.Votes.FetchVotesController">
            <summary>
            Exposes an endpoint to fetch a collection of <see cref="T:RemoteCongress.Common.Vote"/>s.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RemoteCongress.Server.Api.Controllers.Votes.FetchVotesController.#ctor(Microsoft.Extensions.Logging.ILogger{RemoteCongress.Server.Api.Controllers.Votes.FetchVotesController},RemoteCongress.Common.Repositories.IImmutableDataRepository{RemoteCongress.Common.Vote})" -->
        <member name="T:RemoteCongress.Server.Api.Exceptions.MissingBodyException">
            <summary>
            An <see cref="T:System.Exception"/> to throw when a request body is missing.
            </summary>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.MissingBodyException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">
            A message describing the exceptional situation in detail.
            </param>
            <param name="innerException">
            Another exception that brought this exception to light.
            </param>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.MissingBodyException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">
            A message describing the exceptional situation in detail.
            </param>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.MissingBodyException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:RemoteCongress.Server.Api.Exceptions.MissingPathParameterException">
            <summary>
            An <see cref="T:System.Exception"/> to throw when a path parameter is missing.
            </summary>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.MissingPathParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">
            A message describing the exceptional situation in detail.
            </param>
            <param name="innerException">
            Another exception that brought this exception to light.
            </param>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.MissingPathParameterException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">
            A message describing the exceptional situation in detail.
            </param>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.MissingPathParameterException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:RemoteCongress.Server.Api.Exceptions.UnacceptableMediaTypeException">
            <summary>
            An <see cref="T:System.Exception"/> to throw when a request body is missing.
            </summary>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.UnacceptableMediaTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">
            A message describing the exceptional situation in detail.
            </param>
            <param name="innerException">
            Another exception that brought this exception to light.
            </param>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.UnacceptableMediaTypeException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">
            A message describing the exceptional situation in detail.
            </param>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.UnacceptableMediaTypeException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:RemoteCongress.Server.Api.Exceptions.UnparsableMediaTypeException">
            <summary>
            An <see cref="T:System.Exception"/> to throw when a request body is missing.
            </summary>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.UnparsableMediaTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">
            A message describing the exceptional situation in detail.
            </param>
            <param name="innerException">
            Another exception that brought this exception to light.
            </param>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.UnparsableMediaTypeException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">
            A message describing the exceptional situation in detail.
            </param>
        </member>
        <member name="M:RemoteCongress.Server.Api.Exceptions.UnparsableMediaTypeException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:RemoteCongress.Server.Api.Formatters.VerifiedDataCollectionOutputFormatter`1">
            <summary>
            Validates a signed <see cref="!:BaseBlockModel"/> and writes it to the http response <see cref="!:Stream"/>.
            </summary>
            <typeparam name="TData">
            Verified data model
            </typeparam>
        </member>
        <member name="M:RemoteCongress.Server.Api.Formatters.VerifiedDataCollectionOutputFormatter`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.IEnumerable{RemoteCongress.Common.Serialization.ICodec{System.Collections.Generic.IEnumerable{RemoteCongress.Common.SignedData}}})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:RemoteCongress.Server.Api.Formatters.VerifiedDataCollectionOutputFormatter`1.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext,System.Text.Encoding)">
            <summary>
            Writes the signed and validated <see cref="!:BaseBlockModel"/> to the http response <see cref="!:Stream"/>.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext"/>.
            </param>
            <param name="selectedEncoding">
            The selected <see cref="T:System.Text.Encoding"/>.
            </param>
        </member>
        <member name="M:RemoteCongress.Server.Api.Formatters.VerifiedDataCollectionOutputFormatter`1.CanWriteType(System.Type)">
            <summary>
            Checks if a <see cref="T:System.Type"/> can be handled by this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter"/>.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> to test.
            </param>
            <returns>
            True if <paramref name="type"/> can be handled by this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter"/>.
            </returns>
        </member>
        <member name="T:RemoteCongress.Server.Api.Formatters.VerifiedDataInputFormatter`1">
            <summary>
            Reads and validates a signed <see cref="!:BaseBlockModel"/> from the input.
            </summary>
            <typeparam name="TData">
            Verified data model
            </typeparam>
        </member>
        <member name="M:RemoteCongress.Server.Api.Formatters.VerifiedDataInputFormatter`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.IEnumerable{RemoteCongress.Common.Serialization.ICodec{RemoteCongress.Common.SignedData}},System.Collections.Generic.IEnumerable{RemoteCongress.Common.Serialization.ICodec{`0}})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:RemoteCongress.Server.Api.Formatters.VerifiedDataInputFormatter`1.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)">
            <summary>
            Reads a <see cref="T:RemoteCongress.Common.SignedData"/> from a http request <see cref="!:Stream"/>.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext"/>.
            </param>
            <param name="encoding">
            The selected <see cref="T:System.Text.Encoding"/>.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> with the signed and validated <see cref="!:BaseBlockModel"/>.
            </returns>
        </member>
        <member name="M:RemoteCongress.Server.Api.Formatters.VerifiedDataInputFormatter`1.CanReadType(System.Type)">
            <summary>
            Checks if a <see cref="T:System.Type"/> can be handled by this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter"/>.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> to test.
            </param>
            <returns>
            True if <paramref name="type"/> can be handled by this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter"/>.
            </returns>
        </member>
        <member name="T:RemoteCongress.Server.Api.Formatters.VerifiedDataOutputFormatter`1">
            <summary>
            Validates a signed <see cref="!:BaseBlockModel"/> and writes it to the http response <see cref="!:Stream"/>.
            </summary>
            <typeparam name="TData">
            Verified data model
            </typeparam>
        </member>
        <member name="M:RemoteCongress.Server.Api.Formatters.VerifiedDataOutputFormatter`1.#ctor(Microsoft.Extensions.Logging.ILogger,System.Collections.Generic.IEnumerable{RemoteCongress.Common.Serialization.ICodec{RemoteCongress.Common.SignedData}})">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:RemoteCongress.Server.Api.Formatters.VerifiedDataOutputFormatter`1.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext,System.Text.Encoding)">
            <summary>
            Writes the signed and validated <see cref="!:BaseBlockModel"/> to the http response <see cref="!:Stream"/>.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext"/>.
            </param>
            <param name="selectedEncoding">
            The selected <see cref="T:System.Text.Encoding"/>.
            </param>
        </member>
        <member name="M:RemoteCongress.Server.Api.Formatters.VerifiedDataOutputFormatter`1.CanWriteType(System.Type)">
            <summary>
            Checks if a <see cref="T:System.Type"/> can be handled by this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter"/>.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> to test.
            </param>
            <returns>
            True if <paramref name="type"/> can be handled by this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter"/>.
            </returns>
        </member>
    </members>
</doc>
